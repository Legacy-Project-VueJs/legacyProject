{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ShopProduct from \"~/components/layouts/ShopProduct.vue\";\nimport HorizontalShopProduct from \"~/components/layouts/HorizontalShopProduct.vue\";\nimport ShopBannerSlides from \"~/components/layouts/ShopBannerSlides.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"ShopPage\",\n  components: {\n    ShopProduct,\n    HorizontalShopProduct,\n    ShopBannerSlides\n  },\n  data() {\n    return {\n      productView: \"vertical\",\n      products: [],\n      categories: [],\n      filtersOnMobile: false,\n      page: 1,\n      infiniteId: +new Date(),\n      filters: {\n        categories: [],\n        search: \"\",\n        sort: \"created_at,desc\"\n      },\n      sortOptions: [{\n        value: \"created_at,desc\",\n        name: \"Newest First\"\n      }, {\n        value: \"sale_price,asc\",\n        name: \"Lowest Price Frist\"\n      }, {\n        value: \"sale_price,desc\",\n        name: \"Highest Price Frist\"\n      }],\n      banners: [{\n        url: \"/images/banners/01.jpg\"\n      }, {\n        url: \"/images/banners/02.jpg\"\n      }]\n    };\n  },\n  watch: {\n    filters: {\n      handler: function () {\n        this.infiniteId++;\n        this.products = [];\n        this.page = 1;\n      },\n      deep: true\n    }\n  },\n  computed: {\n    ...mapGetters({\n      selectedZone: \"zone/getSelectedZone\"\n    })\n  },\n  methods: {\n    showZoneModal() {\n      this.$store.dispatch(\"zone/toggleZoneModal\");\n    },\n    toggleFilter() {\n      this.filtersOnMobile = !this.filtersOnMobile;\n    },\n    getQueries() {\n      let queryString = \"\";\n      for (const key in this.filters) {\n        if (this.filters[key] && this.filters[key].length) {\n          queryString += `&${key}=${this.filters[key]}`;\n        }\n      }\n      return queryString;\n    },\n    handleLoadMore($state) {\n      this.$axios.$get(`/products?page=${this.page}${this.getQueries()}&zone=${this.selectedZone}`).then(res => {\n        const result = res.data;\n        if (result.length) {\n          result.forEach(value => {\n            this.products.push(value);\n          });\n          $state.loaded();\n        } else {\n          $state.complete();\n        }\n      });\n      this.page = this.page + 1;\n    }\n  },\n  mounted() {\n    // adding query data to search\n    if (this.$route.query.search) {\n      this.filters.search = this.$route.query.search;\n    } else if (this.$route.query.category) {\n      this.filters.categories.push(parseInt(this.$route.query.category));\n    }\n  },\n  async fetch() {\n    // fetching products\n    let response = await this.$axios.$get(\"/categories\");\n    this.categories = response.data;\n  }\n};","map":{"version":3,"names":["ShopProduct","HorizontalShopProduct","ShopBannerSlides","mapGetters","name","components","data","productView","products","categories","filtersOnMobile","page","infiniteId","Date","filters","search","sort","sortOptions","value","banners","url","watch","handler","deep","computed","selectedZone","methods","showZoneModal","$store","dispatch","toggleFilter","getQueries","queryString","key","length","handleLoadMore","$state","$axios","$get","then","res","result","forEach","push","loaded","complete","mounted","$route","query","category","parseInt","fetch","response"],"sources":["C:\\Users\\HP\\Desktop\\LegacyProject\\legacyProject\\frontEnd\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- banner -->\r\n      <the-banner class=\"hidden sm:block\" bannerLink=\"/images/banners/shop-banner.jpg\">\r\n        <template #header>Shop</template>\r\n        <template #breadcrumbs>\r\n          <li>\r\n            <nuxt-link to=\"/\" class=\"font-semibold\">Home</nuxt-link>\r\n          </li>\r\n          <li><span class=\"mx-2\">-</span></li>\r\n          <li>\r\n            <span class=\"font-semibold text-primary-500\">Shop</span>\r\n          </li>\r\n        </template>\r\n      </the-banner>\r\n  \r\n      <!-- shop -->\r\n      <div class=\"container lg:flex my-5 md:my-10 lg:my-20\" v-if=\"selectedZone\">\r\n        <!-- left side -->\r\n        <div class=\"lg:w-9/12\">\r\n          <!-- filter bar -->\r\n          <div class=\"lg:mr-5 mb-5 rounded-lg md:bg-transparent flex items-center justify-between\">\r\n  \r\n            <!-- product layout view buttons -->\r\n            <div class=\"flex items-center\">\r\n              <button @click=\"productView = 'vertical'\" :class=\"{'active' : productView == 'vertical'}\" class=\"text-gray-500 hover:text-primary-500 bg-gray-100 p-2 rounded\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path d=\"M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n                </svg>\r\n              </button>\r\n              <button @click=\"productView = 'horizontal'\" :class=\"{'active' : productView == 'horizontal'}\" class=\"text-gray-500 hover:text-primary-500 ml-2 bg-gray-100 p-2 rounded\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fill-rule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n  \r\n            <!-- sort button -->\r\n            <select-field class=\"text-md font-light ml-4\" v-model=\"filters.sort\" track=value :options=\"sortOptions\"></select-field>\r\n          </div>\r\n  \r\n          <!-- small screen search bar -->\r\n          <div class=\"flex w-full mb-4 lg:hidden border border-gray-300 focus-within:border-primary-600 focus-within:ring focus-within:ring-primary-50 rounded-md overflow-hidden\">\r\n            <input v-model=\"filters.search\" class=\"h-full border-0 bg-white px-4 py-2 rounded text-sm border-none outline-none w-full\" type=\"search\" name=\"search\" placeholder=\"Search product...\" />\r\n  \r\n            <!-- filter button for small devices -->\r\n            <button @click=\"toggleFilter\" class=\"text-gray-500 hover:text-primary-500 bg-gray-100 h-10 w-12 flex items-center justify-center\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fill-rule=\"evenodd\" d=\"M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z\" clip-rule=\"evenodd\" />\r\n              </svg>\r\n            </button>\r\n            <div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- mobile filters -->\r\n          <div v-if=\"filtersOnMobile\" class=\"w-full bg-white p-5 mb-5 border rounded-md\">\r\n            <h3 class=\"flex text-lg font-semibold\">\r\n              <span>Choose filters</span>\r\n              <button @click=\"toggleFilter\" class=\"ml-auto text-red-500\">&#10006;</button>\r\n            </h3>\r\n            <div class=\"pt-5\">\r\n              <h3 class=\"font-semibold mb-3\">Categories</h3>\r\n              <checkbox-field isFilterCheck tiny :label=\"category.name\" :value=\"category.id\" :id=\"category.id\" class=\"mt-2\" v-for=\"category in categories\" :key=\"`categoryId:${category.id}`\" v-model=\"filters.categories\"></checkbox-field>\r\n  \r\n            </div>\r\n          </div>\r\n  \r\n          <!-- products -->\r\n          <div>\r\n            <!-- products -->\r\n            <div v-if=\"productView == 'vertical'\" class=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-8 lg:pr-5\">\r\n              <shop-product v-for=\"(product, i) in products\" :key=\"i\" :product=\"product\"></shop-product>\r\n            </div>\r\n  \r\n            <div v-if=\"productView == 'horizontal'\" class=\"grid grid-cols-1 gap-8 lg:pr-5\">\r\n              <horizontal-shop-product v-for=\"(product, i) in products\" :key=\"i\" :product=\"product\"></horizontal-shop-product>\r\n            </div>\r\n  \r\n            <!-- infinite loading -->\r\n            <client-only>\r\n              <infinite-loading @distance=\"10\" @infinite=\"handleLoadMore\" :identifier=\"infiniteId\">\r\n                <span slot=\"no-more\"></span>\r\n              </infinite-loading>\r\n            </client-only>\r\n          </div>\r\n  \r\n        </div>\r\n  \r\n        <!-- right side -->\r\n        <div class=\"lg:w-3/12 hidden lg:block\">\r\n          <div class=\"pl-2 sticky\" style=\"top: 110px\">\r\n            <!-- search -->\r\n            <div>\r\n              <input v-model=\"filters.search\" class=\"h-full border-0 bg-white px-3 py-2 rounded text-md font-light border border-gray-300 focus:border-primary-500 focus:ring focus:ring-primary-50 w-full\" type=\"search\" name=\"search\" placeholder=\"Search product...\" />\r\n            </div>\r\n  \r\n            <!-- categories -->\r\n            <div class=\"py-5\">\r\n              <h3 class=\"text-md font-semibold mb-3\">Product Categories</h3>\r\n              <checkbox-field isFilterCheck tiny :label=\"category.name\" :value=\"category.id\" :id=\"category.id\" v-model=\"filters.categories\" class=\"mt-2\" v-for=\"category in categories\" :key=\"`categoryId:${category.id}`\"></checkbox-field>\r\n            </div>\r\n  \r\n            <!-- banners -->\r\n            <div>\r\n              <shop-banner-slides :banners=\"banners\"></shop-banner-slides>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"container border text-center md:my-10 lg:my-20\" v-else>\r\n        <div class=\"my-16\">\r\n          <p class=\"text-primary\">\r\n            Please select a zone to see the products.\r\n          </p>\r\n          <button-field type=\"button\" @click=\"showZoneModal\" class=\"mt-4\" label=\"Select Zone\"></button-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import ShopProduct from \"~/components/layouts/ShopProduct.vue\";\r\n  import HorizontalShopProduct from \"~/components/layouts/HorizontalShopProduct.vue\";\r\n  import ShopBannerSlides from \"~/components/layouts/ShopBannerSlides.vue\";\r\n  import { mapGetters } from \"vuex\";\r\n  \r\n  export default {\r\n    name: \"ShopPage\",\r\n    components: {\r\n      ShopProduct,\r\n      HorizontalShopProduct,\r\n      ShopBannerSlides\r\n    },\r\n    data() {\r\n      return {\r\n        productView: \"vertical\",\r\n        products: [],\r\n        categories: [],\r\n        filtersOnMobile: false,\r\n        page: 1,\r\n        infiniteId: +new Date(),\r\n        filters: {\r\n          categories: [],\r\n          search: \"\",\r\n          sort: \"created_at,desc\"\r\n        },\r\n        sortOptions: [\r\n          { value: \"created_at,desc\", name: \"Newest First\" },\r\n          { value: \"sale_price,asc\", name: \"Lowest Price Frist\" },\r\n          { value: \"sale_price,desc\", name: \"Highest Price Frist\" }\r\n        ],\r\n        banners: [\r\n          {\r\n            url: \"/images/banners/01.jpg\"\r\n          },\r\n          {\r\n            url: \"/images/banners/02.jpg\"\r\n          }\r\n        ]\r\n      };\r\n    },\r\n  \r\n    watch: {\r\n      filters: {\r\n        handler: function() {\r\n          this.infiniteId++;\r\n          this.products = [];\r\n          this.page = 1;\r\n        },\r\n        deep: true\r\n      }\r\n    },\r\n  \r\n    computed: {\r\n      ...mapGetters({\r\n        selectedZone: \"zone/getSelectedZone\"\r\n      })\r\n    },\r\n  \r\n    methods: {\r\n      showZoneModal() {\r\n        this.$store.dispatch(\"zone/toggleZoneModal\");\r\n      },\r\n      toggleFilter() {\r\n        this.filtersOnMobile = !this.filtersOnMobile;\r\n      },\r\n  \r\n      getQueries() {\r\n        let queryString = \"\";\r\n        for (const key in this.filters) {\r\n          if (this.filters[key] && this.filters[key].length) {\r\n            queryString += `&${key}=${this.filters[key]}`;\r\n          }\r\n        }\r\n        return queryString;\r\n      },\r\n  \r\n      handleLoadMore($state) {\r\n        this.$axios\r\n          .$get(\r\n            `/products?page=${this.page}${this.getQueries()}&zone=${\r\n              this.selectedZone\r\n            }`\r\n          )\r\n          .then(res => {\r\n            const result = res.data;\r\n            if (result.length) {\r\n              result.forEach(value => {\r\n                this.products.push(value);\r\n              });\r\n              $state.loaded();\r\n            } else {\r\n              $state.complete();\r\n            }\r\n          });\r\n        this.page = this.page + 1;\r\n      }\r\n    },\r\n  \r\n    mounted() {\r\n      // adding query data to search\r\n      if (this.$route.query.search) {\r\n        this.filters.search = this.$route.query.search;\r\n      } else if (this.$route.query.category) {\r\n        this.filters.categories.push(parseInt(this.$route.query.category));\r\n      }\r\n    },\r\n  \r\n    async fetch() {\r\n      // fetching products\r\n      let response = await this.$axios.$get(\"/categories\");\r\n      this.categories = response.data;\r\n    }\r\n  };\r\n  </script>\r\n  <style lang=\"scss\" scoped>\r\n  .active {\r\n    color: #ee1d23;\r\n  }\r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}