{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CartAddRemove = _resolveComponent(\"CartAddRemove\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.addOrRemove())\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.toAdd)\n  }, null, 2 /* CLASS */), _createTextVNode(\"X\")]), !$data.toAdd ? (_openBlock(), _createBlock(_component_CartAddRemove, {\n    key: 0,\n    product: $data.cartItems\n  }, null, 8 /* PROPS */, [\"product\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","onClick","_cache","$event","$options","addOrRemove","class","_normalizeClass","$data","toAdd","_createBlock","_component_CartAddRemove","product","cartItems"],"sources":["C:\\Users\\nabil\\OneDrive\\Desktop\\10\\legacyProject\\frontEnd\\src\\components\\CartBadge.vue"],"sourcesContent":["<template>\r\n  \r\n  <button @click=\"$event=>addOrRemove()\"> <i :class=\"toAdd\"></i>X</button>\r\n   \r\n     <CartAddRemove v-if=\"!toAdd\" :product=\"cartItems\"/>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport {toast} from \"vue3-toastify\"\r\nimport CartAddRemove from \"./CartAddRemove.vue\"\r\nexport default {\r\n  name: \"CartBadge\",\r\n  props:['product'],\r\n  components:{CartAddRemove},\r\n  data(){\r\n  return {\r\n  toAdd:true,\r\n  cartItems:[]\r\n  }\r\n  },\r\n  methods:{\r\n   async addOrRemove(){\r\n   this.cartItems.qty=1\r\n   this.$store.commit('addRemoveCart',{product :this.cartItems, toAdd: this.toAdd})\r\n   let toastMSG\r\n   this.toAdd ? toastMSG ='Added to cart ' : toastMSG='Removed'\r\n   toast(toastMSG,{autoClose:1000,})\r\n   this.toAdd =!this.toAdd\r\n   },\r\n  },\r\n  mounted(){\r\n  let cart =this.$store.state.cart\r\n  let obj =cart.find(o=>o._id===this.product._id)\r\n  if(obj){\r\n  this.toAdd=false\r\n  this.cartItems=obj\r\n  }else{\r\n  this.cartItems=this.product\r\n  this.toAdd=true\r\n  }\r\n  }\r\n  \r\n};\r\n</script>\r\n\r\n<style>\r\nbutton {\r\n  background-color: black;\r\n  border: none;\r\n  color: white;\r\n  padding: 12px 24px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: crimson;\r\n}\r\n\r\ni {\r\n  display: inline-block;\r\n  margin-right: 8px;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.CartAddRemove {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  margin-left: 16px;\r\n}\r\n\r\n.CartAddRemove button {\r\n  background-color: crimson;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n}\r\n\r\n.CartAddRemove button:hover {\r\n  background-color: crimson;\r\n}\r\n\r\n.CartAddRemove span {\r\n  font-size: 14px;\r\n  margin-left: 8px;\r\n  color: #666;\r\n}\r\n</style>\r\n\r\n\r\n"],"mappings":";;;6DAEEA,mBAAA,CAAwE;IAA/DC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAEC,MAAM,IAAEC,QAAA,CAAAC,WAAW;MAAKL,mBAAA,CAAsB;IAAlBM,KAAK,EAAAC,eAAA,CAAEC,KAAA,CAAAC,KAAK;4CAAM,GAAC,E,IAEtCD,KAAA,CAAAC,KAAK,I,cAA3BC,YAAA,CAAmDC,wBAAA;;IAArBC,OAAO,EAAEJ,KAAA,CAAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}